definitions:
  models.AlertMessageSchema:
    properties:
      channelId:
        type: string
      email:
        type: string
      message:
        type: string
      type:
        type: string
    type: object
  models.FindMemberSchema:
    properties:
      backNum:
        type: integer
      dataEngNum:
        type: integer
      devOpsNum:
        type: integer
      email:
        items:
          type: string
        type: array
      frontNum:
        type: integer
      fullStack:
        type: integer
      goal:
        type: string
      id:
        type: integer
      leader:
        items:
          type: string
        type: array
      name:
        type: string
      notionLink:
        type: string
      projectExplain:
        type: string
      recruitExplain:
        type: string
      recruitNum:
        type: integer
      rule:
        type: string
      stack:
        items:
          type: string
        type: array
      studyExplain:
        type: string
      type:
        type: string
    type: object
  models.ImageDeployRequest:
    properties:
      commitLink:
        type: string
      environment:
        type: string
      imageName:
        type: string
      imageTag:
        type: string
    type: object
  models.ProfilePictureRequest:
    properties:
      email:
        type: string
    type: object
  models.ProfilePictureResponse:
    properties:
      email:
        type: string
      image:
        type: string
      isTecheer:
        type: boolean
    type: object
  models.StatusRequest:
    properties:
      environment:
        type: string
      failedStep:
        type: string
      imageName:
        type: string
      imageTag:
        type: string
      jobURL:
        type: string
      logs:
        type: string
      status:
        type: string
    type: object
  models.UserMessageSchema:
    properties:
      applicantEmail:
        type: string
      leaderEmail:
        type: string
      result:
        type: string
      teamId:
        type: integer
      teamName:
        type: string
      type:
        type: string
    type: object
info:
  contact: {}
paths:
  /alert/channel:
    post:
      consumes:
      - application/json
      description: Send channel message to find_member channel (legacy)
      parameters:
      - description: FindMemberSchema
        in: body
        name: models.FindMemberSchema
        required: true
        schema:
          $ref: '#/definitions/models.FindMemberSchema'
      produces:
      - application/json
      responses:
        "200":
          description: Channel message sent
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request
          schema:
            additionalProperties: true
            type: object
      security:
      - APIKeyAuth: []
      summary: Send channel message to find_member channel (legacy)
      tags:
      - alert
  /alert/find-member:
    post:
      consumes:
      - application/json
      description: Send Message to Find member
      parameters:
      - description: FindMemberSchema
        in: body
        name: models.FindMemberSchema
        required: true
        schema:
          $ref: '#/definitions/models.FindMemberSchema'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request
          schema:
            additionalProperties: true
            type: object
      security:
      - APIKeyAuth: []
      summary: Send Message to Find member
      tags:
      - alert
  /alert/message:
    post:
      consumes:
      - application/json
      description: Send alert message
      parameters:
      - description: AlertMessageSchema
        in: body
        name: models.AlertMessageSchema
        required: true
        schema:
          $ref: '#/definitions/models.AlertMessageSchema'
      produces:
      - application/json
      responses:
        "200":
          description: Alert message sent
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request
          schema:
            additionalProperties: true
            type: object
      security:
      - APIKeyAuth: []
      summary: Send alert message
      tags:
      - alert
  /alert/user:
    post:
      consumes:
      - application/json
      description: Send user message (legacy)
      parameters:
      - description: UserMessageSchema
        in: body
        name: models.UserMessageSchema
        required: true
        schema:
          $ref: '#/definitions/models.UserMessageSchema'
      produces:
      - application/json
      responses:
        "200":
          description: User message sent
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request
          schema:
            additionalProperties: true
            type: object
      security:
      - APIKeyAuth: []
      summary: Send user message (legacy)
      tags:
      - alert
  /deploy/image:
    post:
      consumes:
      - application/json
      description: Deploy image
      parameters:
      - description: Deployment request
        in: body
        name: deployRequest
        required: true
        schema:
          $ref: '#/definitions/models.ImageDeployRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Deployment request received
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - APIKeyAuth: []
      summary: Deploy image
      tags:
      - deploy
  /deploy/status:
    post:
      consumes:
      - application/json
      description: Deploy status
      parameters:
      - description: Status request
        in: body
        name: statusRequest
        required: true
        schema:
          $ref: '#/definitions/models.StatusRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Status request received
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - APIKeyAuth: []
      summary: Deploy status
      tags:
      - deploy
  /profile/picture:
    post:
      consumes:
      - application/json
      description: Get profile picture
      parameters:
      - description: Profile picture request
        in: body
        name: profilePictureRequest
        required: true
        schema:
          $ref: '#/definitions/models.ProfilePictureRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Profile picture retrieved successfully
          schema:
            $ref: '#/definitions/models.ProfilePictureResponse'
        "400":
          description: Bad request
          schema:
            additionalProperties: true
            type: object
      security:
      - APIKeyAuth: []
      summary: Get profile picture
      tags:
      - profile
  /slack/interactions:
    post:
      consumes:
      - application/json
      description: Handle Slack interaction
      produces:
      - application/json
      responses:
        "200":
          description: Slack interaction received
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request
          schema:
            additionalProperties: true
            type: object
      security:
      - SlackSigningSecret: []
      summary: Handle Slack interaction
      tags:
      - slack
securityDefinitions:
  APIKeyAuth:
    in: header
    name: X-API-Key
    type: apiKey
  JwtAuth:
    in: cookie
    name: access_token
    type: apiKey
  SlackSigningSecret:
    in: header
    name: X-Slack-Signature
    type: apiKey
swagger: "2.0"
